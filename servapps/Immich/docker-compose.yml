cosmos-installer: null
version: "3.7"
services:
  "{ServiceName}-immich":
    container_name: "{ServiceName}-immich"
    image: ghcr.io/immich-app/immich-server:v1.94.1
    command:
      - start-server.sh
    volumes:
      - ${ROOT_FOLDER_HOST}/media/data/images/immich:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=tipi
      - DB_PASSWORD=${DB_PASSWORD}
      - ENABLE_MAPBOX=false
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich-redis
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - immich-redis
      - immich-db
    ports:
      - ${APP_PORT}:3001
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-immich"
  "{ServiceName}-immich-microservices":
    container_name: "{ServiceName}-immich-microservices"
    image: ghcr.io/immich-app/immich-server:v1.94.1
    command:
      - start-microservices.sh
    volumes:
      - ${ROOT_FOLDER_HOST}/media/data/images/immich:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=tipi
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich-redis
      - JWT_SECRET=${JWT_SECRET}
      - ENABLE_MAPBOX=false
    depends_on:
      - immich-redis
      - immich-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-immich-microservices"
  "{ServiceName}-immich-machine-learning":
    container_name: "{ServiceName}-immich-machine-learning"
    image: ghcr.io/immich-app/immich-machine-learning:v1.94.1
    volumes:
      - ${ROOT_FOLDER_HOST}/media/data/images/immich:/usr/src/app/upload
      - ${APP_DATA_DIR}/data/immich-ml-cache:/cache
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=tipi
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=immich
      - DB_DATABASE_NAME=immich
    depends_on:
      - immich-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-immich-machine-learning"
  "{ServiceName}-immich-redis":
    container_name: "{ServiceName}-immich-redis"
    image: redis:6.2
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-immich-redis"
  "{ServiceName}-immich-db":
    container_name: "{ServiceName}-immich-db"
    image: tensorchord/pgvecto-rs:pg14-v0.1.11
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: tipi
      POSTGRES_DB: immich
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-immich-db"
minVersion: 0.14.0-0
