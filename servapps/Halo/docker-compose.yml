cosmos-installer: null
version: "3.7"
services:
  "{ServiceName}-halo":
    image: halohub/halo:2.12.2
    container_name: "{ServiceName}-halo"
    restart: unless-stopped
    depends_on:
      halodb:
        condition: service_healthy
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}:/root/.halo2
    ports:
      - ${APP_PORT}:8090
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8090/actuator/health/readiness
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    command:
      - --spring.r2dbc.url=r2dbc:pool:postgresql://halodb/halo
      - --spring.r2dbc.username=halo
      - --spring.r2dbc.password=${HALO_DATABASE_PASSWORD}
      - --spring.sql.init.platform=postgresql
      - --halo.external-url=${HALO_EXTERNAL_URL}
    hostname: "{ServiceName}-halo"
  "{ServiceName}-halodb":
    image: postgres:latest
    container_name: "{ServiceName}-halodb"
    restart: unless-stopped
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}/db:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=${HALO_DATABASE_PASSWORD}
      - POSTGRES_USER=halo
      - POSTGRES_DB=halo
      - PGUSER=halo
    hostname: "{ServiceName}-halodb"
minVersion: 0.14.0-0
