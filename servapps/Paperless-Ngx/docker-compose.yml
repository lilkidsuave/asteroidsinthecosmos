cosmos-installer: null
version: "3.7"
services:
  "{ServiceName}-paperless-ngx":
    container_name: "{ServiceName}-paperless-ngx"
    image: ghcr.io/paperless-ngx/paperless-ngx:2.5.1
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - ${APP_PORT}:8000
    volumes:
      - ${APP_DATA_DIR}/data/paperless_data:/usr/src/paperless/data
      - ${APP_DATA_DIR}/data/paperless_media:/usr/src/paperless/media
      - ${APP_DATA_DIR}/data/paperless_export:/usr/src/paperless/export
      - ${APP_DATA_DIR}/data/paperless_consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USERNAME}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
      PAPERLESS_TIKA_ENABLED: ${PAPERLESS_TIKA_ENABLED}
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_URL: ${APP_PROTOCOL:-http}://${APP_DOMAIN}
      COMPOSE_PROJECT_NAME: paperless-ngx
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-paperless-ngx"
  "{ServiceName}-broker":
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    networks:
      - tipi_main_network
    container_name: "{ServiceName}-broker"
    hostname: "{ServiceName}-broker"
  "{ServiceName}-db":
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      - tipi_main_network
    container_name: "{ServiceName}-db"
    hostname: "{ServiceName}-db"
  "{ServiceName}-gotenberg":
    image: docker.io/gotenberg/gotenberg:8.0
    restart: unless-stopped
    command:
      - gotenberg
      - --chromium-disable-javascript=true
      - --chromium-allow-list=file:///tmp/.*
    networks:
      - tipi_main_network
    container_name: "{ServiceName}-gotenberg"
    hostname: "{ServiceName}-gotenberg"
  "{ServiceName}-tika":
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    networks:
      - tipi_main_network
    container_name: "{ServiceName}-tika"
    hostname: "{ServiceName}-tika"
minVersion: 0.14.0-0
