cosmos-installer: null
version: "3.7"
services:
  "{ServiceName}-tandoor":
    container_name: "{ServiceName}-tandoor"
    image: ghcr.io/tandoorrecipes/recipes:1.5.13
    volumes:
      - ${APP_DATA_DIR}/data/staticfiles:/opt/recipes/staticfiles
      - ${APP_DATA_DIR}/data/mediafiles:/opt/recipes/mediafiles
    ports:
      - ${APP_PORT}:8080
    environment:
      - SECRET_KEY=${TANDOOR_SECRET_KEY}
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=tandoor-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tandoor
      - POSTGRES_PASSWORD=${TANDOOR_POSTGRESS_PASSWORD}
      - POSTGRES_DB=tandoordb
    networks:
      - tipi_main_network
    restart: unless-stopped
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      tandoor-db:
        condition: service_healthy
    hostname: "{ServiceName}-tandoor"
  "{ServiceName}-tandoor-db":
    image: postgres:15-alpine
    container_name: "{ServiceName}-tandoor-db"
    volumes:
      - ${APP_DATA_DIR}/data/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tandoor
      - POSTGRES_PASSWORD=${TANDOOR_POSTGRESS_PASSWORD}
      - POSTGRES_DB=tandoordb
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
        - -d
        - tandoor
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    hostname: "{ServiceName}-tandoor-db"
minVersion: 0.14.0-0
