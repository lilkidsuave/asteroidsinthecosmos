cosmos-installer: null
version: "3.7"
services:
  "{ServiceName}-tooljet":
    container_name: "{ServiceName}-tooljet"
    tty: true
    stdin_open: true
    image: tooljet/tooljet-client-ce:v2.4.2
    restart: always
    ports:
      - ${APP_PORT}:80
    depends_on:
      - tooljet-server
    networks:
      - tipi_main_network
    environment:
      - SERVER_HOST=tooljet-server
    command: openresty -g "daemon off;"
    hostname: "{ServiceName}-tooljet"
  "{ServiceName}-tooljet-server":
    container_name: "{ServiceName}-tooljet-server"
    image: tooljet/tooljet-server-ce:v2.24.0
    tty: true
    stdin_open: true
    restart: always
    networks:
      - tipi_main_network
    environment:
      - SERVE_CLIENT=false
      - SERVER_HOST=tooljet-server
      - TOOLJET_HOST=https://${APP_DOMAIN}
      - LOCKBOX_MASTER_KEY=${LOCKBOX_MASTER_KEY}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PG_DB=tooljet
      - PG_USER=tooljet
      - PG_HOST=db-tooljet
      - PG_PASS=${DB_PASSWORD}
      - CHECK_FOR_UPDATES=check_if_updates_are_available
      - DEFAULT_FROM_EMAIL=hello@tooljet.io
    command: npm run start:prod
    hostname: "{ServiceName}-tooljet-server"
  "{ServiceName}-db-tooljet":
    container_name: "{ServiceName}-db-tooljet"
    image: postgres:11
    restart: on-failure
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=tooljet
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=tooljet
      - PGDATA=/data/postgres
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-db-tooljet"
minVersion: 0.14.0-0
