cosmos-installer: null
version: "3.9"
services:
  "{ServiceName}-penpot":
    image: penpotapp/frontend:latest
    container_name: "{ServiceName}-penpot"
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ${APP_DATA_DIR}/data/assets:/opt/data/assets
    depends_on:
      - penpot-backend
      - penpot-exporter
    networks:
      - tipi_main_network
    environment:
      - PENPOT_FLAGS=enable-registration enable-login-with-password
    hostname: "{ServiceName}-penpot"
  "{ServiceName}-penpot-backend":
    image: penpotapp/backend:latest
    container_name: "{ServiceName}-penpot-backend"
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/assets:/opt/data/assets
    depends_on:
      - penpot-postgres
      - penpot-redis
    networks:
      - tipi_main_network
    environment:
      - PENPOT_FLAGS=enable-registration enable-login-with-password
        disable-email-verification
      - PENPOT_PUBLIC_URI=${APP_PROTOCOL:-http}://${APP_DOMAIN}:${APP_PORT}
      - PENPOT_DATABASE_URI=postgresql://penpot-postgres/penpot
      - PENPOT_DATABASE_USERNAME=tipi
      - PENPOT_DATABASE_PASSWORD=${PENPOT_POSTGRES_PASSWORD}
      - PENPOT_REDIS_URI=redis://penpot-redis/0
      - PENPOT_ASSETS_STORAGE_BACKEND=assets-fs
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets
      - PENPOT_TELEMETRY_ENABLED=false
    hostname: "{ServiceName}-penpot-backend"
  "{ServiceName}-penpot-exporter":
    image: penpotapp/exporter:latest
    container_name: "{ServiceName}-penpot-exporter"
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      - PENPOT_PUBLIC_URI=http://penpot
      - PENPOT_REDIS_URI=redis://penpot-redis/0
    hostname: "{ServiceName}-penpot-exporter"
  "{ServiceName}-penpot-postgres":
    image: postgres:14
    restart: unless-stopped
    container_name: "{ServiceName}-penpot-postgres"
    stop_signal: SIGINT
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    networks:
      - tipi_main_network
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_DB=penpot
      - POSTGRES_USER=tipi
      - POSTGRES_PASSWORD=${PENPOT_POSTGRES_PASSWORD}
    hostname: "{ServiceName}-penpot-postgres"
  "{ServiceName}-penpot-redis":
    image: redis:7
    container_name: "{ServiceName}-penpot-redis"
    restart: unless-stopped
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-penpot-redis"
minVersion: 0.14.0-0
