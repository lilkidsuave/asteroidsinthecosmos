cosmos-installer: null
version: "2.1"
services:
  "{ServiceName}-nocodb":
    container_name: "{ServiceName}-nocodb"
    depends_on:
      nocodb-db:
        condition: service_healthy
    environment:
      - NC_DB=pg://nocodb-db:5432?u=postgres&p=${NOCODB_DB_PASSWORD}&d=nocodb
      - NC_PUBLIC_URL=${APP_PROTOCOL:-http}://${APP_DOMAIN}
      - NC_AUTH_JWT_SECRET=${NOCODB_JWT_SECRET}
      - NC_REDIS_URL=redis://default:${NOCODB_REDIS_PASSWORD}@nocodb-redis:6379
      - DB_QUERY_LIMIT_DEFAULT=${NOCODB_TABLE_ROWS-25}
    image: nocodb/nocodb:0.204.0
    ports:
      - ${APP_PORT}:8080
    restart: always
    volumes:
      - ${APP_DATA_DIR}/data/nocode-data:/usr/app/data
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-nocodb"
  "{ServiceName}-nocodb-db":
    container_name: "{ServiceName}-nocodb-db"
    environment:
      POSTGRES_DB: nocodb
      POSTGRES_PASSWORD: ${NOCODB_DB_PASSWORD}
      POSTGRES_USER: postgres
    healthcheck:
      interval: 10s
      retries: 10
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      timeout: 2s
    image: postgres
    restart: always
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-nocodb-db"
  "{ServiceName}-nocodb-redis":
    image: redis:alpine
    container_name: "{ServiceName}-nocodb-redis"
    restart: unless-stopped
    command: redis-server --requirepass ${NOCODB_REDIS_PASSWORD}
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - tipi_main_network
    hostname: "{ServiceName}-nocodb-redis"
minVersion: 0.14.0-0
